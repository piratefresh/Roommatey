{"version":3,"file":"static/webpack/static\\development\\pages\\register.js.1f734bebd07462c0c554.hot-update.js","sources":["webpack:///./pages/register.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Header from \"../components/Header\";\r\nimport { Form, Label, Input, Button } from \"../components/styles/FormStyles\";\r\n\r\nexport class UserForm extends Component {\r\n  state = {\r\n    step: 1,\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\"\r\n  };\r\n\r\n  // Proceed to next step\r\n  nextStep = () => {\r\n    const { step } = this.state;\r\n    this.setState({\r\n      step: step + 1\r\n    });\r\n  };\r\n\r\n  // Go back to prev step\r\n  prevStep = () => {\r\n    const { step } = this.state;\r\n    this.setState({\r\n      step: step - 1\r\n    });\r\n  };\r\n\r\n  // Handle fields change\r\n  handleChange = input => e => {\r\n    this.setState({ [input]: e.target.value });\r\n  };\r\n  render() {\r\n    const { step } = this.state;\r\n    const { firstName, lastName, email } = this.state;\r\n    const values = { firstName, lastName, email };\r\n    return (\r\n      <>\r\n        <Header headertitle=\"Registration\" />\r\n        <div>\r\n          <h1>Anywhere in your app!</h1>\r\n          <Formik\r\n            initialValues={{ email: \"\", password: \"\" }}\r\n            validate={values => {\r\n              let errors = {};\r\n              if (values.email.length > 0) {\r\n                errors.email = \"Required\";\r\n              } else if (\r\n                !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n              ) {\r\n                errors.email = \"Invalid email address\";\r\n              }\r\n              return errors;\r\n            }}\r\n            onSubmit={(values, { setSubmitting }) => {\r\n              setTimeout(() => {\r\n                alert(JSON.stringify(values, null, 2));\r\n                setSubmitting(false);\r\n              }, 400);\r\n            }}\r\n          >\r\n            {({\r\n              values,\r\n              errors,\r\n              touched,\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit,\r\n              isSubmitting\r\n              /* and other goodies */\r\n            }) => (\r\n              <Form onSubmit={handleSubmit}>\r\n                <Label className=\"form-field\" htmlFor=\"email\">\r\n                  <span>E-mail:</span>\r\n                  <Input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"User@email.com\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.email}\r\n                  />\r\n                </Label>\r\n                {errors.email && touched.email && errors.email}\r\n                <Label className=\"form-field\" htmlFor=\"email\">\r\n                  <span>Password:</span>\r\n                  <Input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.password}\r\n                  />\r\n                </Label>\r\n                {errors.password && touched.password && errors.password}\r\n                <Button type=\"submit\" disabled={isSubmitting}>\r\n                  Submit\r\n                </Button>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserForm;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAEA;AACA;AACA;AACA;AAJA;AACA;AAFA;AASA;AACA;AACA;AACA;AADA;AAGA;AACA;AAfA;AAiBA;AACA;AACA;AACA;AADA;AAGA;AACA;AAvBA;AAyBA;AACA;AACA;AAFA;AACA;AA1BA;AAAA;AACA;AADA;AAAA;AAAA;AA4BA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAlCA;AA2CA;AApGA;AACA;AADA;AAAA;AAuGA;;;;A","sourceRoot":""}